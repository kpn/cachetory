[tool.poetry]
authors = [
    "Pavel Perestoronin <pavel.perestoronin@kpn.com>",
]
description = "Caching library with support for multiple cache backends"
keywords = ["cache"]
license = "Apache-2.0"
name = "cachetory"
readme = "README.md"
repository = "https://github.com/kpn/cachetory"
version = "0.0.0"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP",
    "Typing :: Typed",
]

[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry.dependencies]
python = "^3.7.0"
pydantic = "^1.10.4"
typing-extensions = "^4.4.0"
redis = {version = "^4.4.2", optional = true}
zstd = {version = "^1.5.2.6", optional = true}

[tool.poetry.extras]
redis = ["redis"]
zstd = ["zstd"]

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
mypy = "^0.991"
black = "^23.1.0"
ruff = "^0.0.239"
pytest = "^7.2.1"
pytest-asyncio = "^0.20.3"
pytest-cov = "^4.0.0"
types-redis = "^4.4.0.4"
freezegun = "^1.2.2"

[tool.black]
line-length = 120
target_version = ["py37", "py38", "py39", "py310", "py311"]

[tool.ruff]
line-length = 120
target-version = "py37"
select = [
    "A",
    "ANN",
    "B",
    "C4",
    "COM",
    "D",
    "E",
    "F",
    "I",
    "N",
    "PIE",
    "PT",
    "PTH",
    "RET",
    "SIM",
    "T20",
    "TRY",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "ANN001",  # TODO: fix and enable
    "ANN101",
    "ANN102",
    "ANN201",  # TODO: fix and enable
    "ANN401",
    "D100",
    "D102",  # TODO: fix and enable
    "D103",
    "D104",
    "D105",  # TODO: fix and enable
    "D107",  # TODO: fix and enable
    "D202",
    "D203",
    "D212",  # alternative of D213
    "D406",
    "D407",
    "D417",  # TODO: fix and enable
    "PT001",
    "PT011",
    "PT013",
    "RET505",
    "TRY003",
    "UP006",  # 3.9
    "UP007",  # 3.10
    "UP033",  # 3.9
]
unfixable = ["B"]

[tool.ruff.per-file-ignores]
"tests/*" = ["D101", "D102", "D106"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.mypy]
no_implicit_optional = true
pretty = true
check_untyped_defs = true

[tool.pytest.ini_options]
addopts = "--cov=./ --cov-report=xml"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["cachetory"]
branch = true
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "except ImportError",
    "if TYPE_CHECKING:",
]

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "default-unprefixed"
style = "semver"
strict = true
latest-tag = true
